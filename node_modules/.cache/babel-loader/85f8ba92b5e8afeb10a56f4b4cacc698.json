{"ast":null,"code":"var _jsxFileName = \"/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/components/FunkoToTradePage.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, NavLink } from \"react-router-dom\";\nimport api from \"../util/api\";\n\nclass FunkoToTradePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isClicked: false,\n      myFunkos: []\n    };\n\n    this.handleClick = () => {\n      api.myFunkosToTrade(this.props.currentUser.id).then(data => {\n        this.setState({\n          isClicked: true,\n          myFunkos: data\n        });\n      });\n    };\n\n    this.originalRender = () => {\n      const _this$props$selectedF = this.props.selectedFunko.funko,\n            name = _this$props$selectedF.name,\n            image_url = _this$props$selectedF.image_url,\n            fandom = _this$props$selectedF.fandom,\n            category = _this$props$selectedF.category,\n            release_date = _this$props$selectedF.release_date,\n            trending_value = _this$props$selectedF.trending_value,\n            exclusivity = _this$props$selectedF.exclusivity;\n      const parts = release_date.split(\"-\");\n      const date = new Date(parts[0], parts[1] - 1, parts[2]);\n      return React.createElement(\"div\", {\n        className: \"funko-page-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://www.pngmart.com/files/8/Label-Download-PNG-Image.png\",\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"trending-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"*trending value:\"), React.createElement(\"h1\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, trending_value == null ? \"$--\" : \"$\".concat(trending_value))), React.createElement(\"h1\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        className: \"funko-image-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image_url,\n        alt: name,\n        className: \"funko-page-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"gradient\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"funko-page-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"topic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"fandom:\"), React.createElement(\"h2\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, fandom), React.createElement(\"h2\", {\n        className: \"topic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"category:\"), React.createElement(\"h2\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, category), React.createElement(\"h2\", {\n        className: \"topic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"release date:\"), React.createElement(\"h2\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, new Intl.DateTimeFormat(\"en-GB\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"2-digit\"\n      }).format(date).toLowerCase()), React.createElement(\"h2\", {\n        className: \"topic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"exclusivity:\"), React.createElement(\"h2\", {\n        className: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, exclusivity === \"\" ? \"none\" : \"\".concat(exclusivity)), React.createElement(\"div\", {\n        className: \"buttons-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"make an offer\"), React.createElement(Link, {\n        to: \"/funkos-to-trade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"see all funkos on trade\")))));\n    };\n  }\n\n  render() {\n    return this.state.isClicked ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" \", this.state.myFunkos.map(funko => funko.funko.name)) : this.originalRender();\n  }\n\n}\n\nexport default FunkoToTradePage;","map":{"version":3,"sources":["/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/components/FunkoToTradePage.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","NavLink","api","FunkoToTradePage","state","isClicked","myFunkos","handleClick","myFunkosToTrade","props","currentUser","id","then","data","setState","originalRender","selectedFunko","funko","name","image_url","fandom","category","release_date","trending_value","exclusivity","parts","split","date","Date","Intl","DateTimeFormat","year","month","day","format","toLowerCase","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink\n} from \"react-router-dom\";\nimport api from \"../util/api\";\n\nclass FunkoToTradePage extends Component {\n  state = {\n    isClicked: false,\n    myFunkos: []\n  };\n\n  handleClick = () => {\n    api.myFunkosToTrade(this.props.currentUser.id).then(data => {\n      this.setState({ isClicked: true, myFunkos: data });\n    });\n  };\n\n  originalRender = () => {\n    const {\n      name,\n      image_url,\n      fandom,\n      category,\n      release_date,\n      trending_value,\n      exclusivity\n    } = this.props.selectedFunko.funko;\n\n    const parts = release_date.split(\"-\");\n    const date = new Date(parts[0], parts[1] - 1, parts[2]);\n\n    return (\n      <div className=\"funko-page-card\">\n        <div className=\"value\">\n          <img\n            src=\"http://www.pngmart.com/files/8/Label-Download-PNG-Image.png\"\n            className=\"label\"\n          />\n\n          <h3 className=\"trending-value\">*trending value:</h3>\n          <h1 className=\"price\">\n            {trending_value == null ? \"$--\" : `$${trending_value}`}\n          </h1>\n        </div>\n        <h1 className=\"info\">{name}</h1>\n        <div className=\"funko-image-div\">\n          <img src={image_url} alt={name} className=\"funko-page-img\" />\n          <div className=\"gradient\" />\n        </div>\n        <div className=\"funko-page-details\">\n          <h2 className=\"topic\">fandom:</h2>\n          <h2 className=\"info\">{fandom}</h2>\n          <h2 className=\"topic\">category:</h2>\n          <h2 className=\"info\">{category}</h2>\n          <h2 className=\"topic\">release date:</h2>\n          <h2 className=\"info\">\n            {new Intl.DateTimeFormat(\"en-GB\", {\n              year: \"numeric\",\n              month: \"long\",\n              day: \"2-digit\"\n            })\n              .format(date)\n              .toLowerCase()}\n          </h2>\n          <h2 className=\"topic\">exclusivity:</h2>\n          <h2 className=\"info\">\n            {exclusivity === \"\" ? \"none\" : `${exclusivity}`}\n          </h2>\n          <div className=\"buttons-div\">\n            <button onClick={this.handleClick}>make an offer</button>\n            <Link to={\"/funkos-to-trade\"}>\n              <button>see all funkos on trade</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return this.state.isClicked ? (\n      <div> {this.state.myFunkos.map(funko => funko.funko.name)}</div>\n    ) : (\n      this.originalRender()\n    );\n  }\n}\n\nexport default FunkoToTradePage;\n"]},"metadata":{},"sourceType":"module"}