{"ast":null,"code":"var _jsxFileName = \"/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FunkosCardContainer from \"./containers/FunkosCardContainer\";\nconst API = \"http://localhost:3000\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchFunkos = () => {\n      fetch(\"\".concat(API, \"/funkos\")).then(resp => resp.json()).then(data => this.setState({\n        funkos: data,\n        selection: data.slice(0, this.index)\n      }));\n    };\n\n    this.fetchMoreFunkos = () => {\n      if (this.state.selection.length >= this.state.funkos.length) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      }\n\n      this.setState({\n        selection: this.state.selection.concat(this.state.funkos.slice(this.index, this.index + 100))\n      });\n      this.index = this.index + 100;\n    };\n\n    this.home = () => {\n      return React.createElement(InfiniteScroll, {\n        dataLength: this.state.selection.length,\n        next: this.fetchMoreFunkos,\n        hasMore: this.state.hasMore,\n        loader: React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Loading...\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(FunkosCardContainer, {\n        funkos: this.state.selection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      // funkos: Array.from({ length: 20 })\n      funkos: [],\n      selection: [],\n      hasMore: true\n    };\n    this.index = 100;\n  }\n\n  componentDidMount() {\n    this.fetchFunkos();\n  } ////// ------------- funkos request ------------------- /////////////\n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: this.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","InfiniteScroll","NavBar","FunkosCardContainer","API","App","constructor","fetchFunkos","fetch","then","resp","json","data","setState","funkos","selection","slice","index","fetchMoreFunkos","state","length","hasMore","concat","home","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,MAAMC,GAAG,GAAG,uBAAZ;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkBdC,WAlBc,GAkBA,MAAM;AAClBC,MAAAA,KAAK,WAAIJ,GAAJ,aAAL,CACGK,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,IAAI,IACR,KAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,IAAV;AAAgBG,QAAAA,SAAS,EAAEH,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,KAAKC,KAAnB;AAA3B,OAAd,CAHJ;AAKD,KAxBa;;AAAA,SA4BdC,eA5Bc,GA4BI,MAAM;AACtB,UAAI,KAAKC,KAAL,CAAWJ,SAAX,CAAqBK,MAArB,IAA+B,KAAKD,KAAL,CAAWL,MAAX,CAAkBM,MAArD,EAA6D;AAC3D,aAAKP,QAAL,CAAc;AAAEQ,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACD;;AACD,WAAKR,QAAL,CAAc;AACZE,QAAAA,SAAS,EAAE,KAAKI,KAAL,CAAWJ,SAAX,CAAqBO,MAArB,CACT,KAAKH,KAAL,CAAWL,MAAX,CAAkBE,KAAlB,CAAwB,KAAKC,KAA7B,EAAoC,KAAKA,KAAL,GAAa,GAAjD,CADS;AADC,OAAd;AAKA,WAAKA,KAAL,GAAa,KAAKA,KAAL,GAAa,GAA1B;AACD,KAvCa;;AAAA,SA2CdM,IA3Cc,GA2CP,MAAM;AACX,aACE,oBAAC,cAAD;AACE,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWJ,SAAX,CAAqBK,MADnC;AAEE,QAAA,IAAI,EAAE,KAAKF,eAFb;AAGE,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWE,OAHtB;AAIE,QAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,mBAAD;AAAqB,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWJ,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD,KAtDa;;AAEZ,SAAKI,KAAL,GAAa;AACX;AACAL,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXM,MAAAA,OAAO,EAAE;AAJE,KAAb;AAOA,SAAKJ,KAAL,GAAa,GAAb;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,WAAL;AACD,GAfyB,CAiB1B;;;AAwCAkB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAE,KAAKF,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAhEyB;;AAmE5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FunkosCardContainer from \"./containers/FunkosCardContainer\";\nconst API = \"http://localhost:3000\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // funkos: Array.from({ length: 20 })\n      funkos: [],\n      selection: [],\n      hasMore: true\n    };\n\n    this.index = 100;\n  }\n\n  componentDidMount() {\n    this.fetchFunkos();\n  }\n\n  ////// ------------- funkos request ------------------- /////////////\n\n  fetchFunkos = () => {\n    fetch(`${API}/funkos`)\n      .then(resp => resp.json())\n      .then(data =>\n        this.setState({ funkos: data, selection: data.slice(0, this.index) })\n      );\n  };\n\n  ////// ------------- infinite scroll ------------------- /////////////\n\n  fetchMoreFunkos = () => {\n    if (this.state.selection.length >= this.state.funkos.length) {\n      this.setState({ hasMore: false });\n      return;\n    }\n    this.setState({\n      selection: this.state.selection.concat(\n        this.state.funkos.slice(this.index, this.index + 100)\n      )\n    });\n    this.index = this.index + 100;\n  };\n\n  ////// ------------- routes ------------------- /////////////\n\n  home = () => {\n    return (\n      <InfiniteScroll\n        dataLength={this.state.selection.length}\n        next={this.fetchMoreFunkos}\n        hasMore={this.state.hasMore}\n        loader={<h4>Loading...</h4>}\n      >\n        <FunkosCardContainer funkos={this.state.selection} />\n      </InfiniteScroll>\n    );\n  };\n\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Route path=\"/\" exact component={this.home} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}