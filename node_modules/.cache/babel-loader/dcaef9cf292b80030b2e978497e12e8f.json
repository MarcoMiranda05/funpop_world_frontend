{"ast":null,"code":"var _jsxFileName = \"/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FunkosCardContainer from \"./containers/FunkosCardContainer\";\nimport api from \"./util/api\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchMoreFunkos = () => {\n      if (this.state.selection.length >= this.state.funkos.length) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      }\n\n      setTimeout(() => {\n        this.setState({\n          selection: this.state.selection.concat(this.state.funkos.slice(this.index, this.index + 20))\n        });\n        this.index = this.index + 20;\n      }, 1500);\n    };\n\n    this.home = () => {\n      return React.createElement(InfiniteScroll, {\n        dataLength: this.state.selection.length,\n        next: this.fetchMoreFunkos,\n        hasMore: this.state.hasMore,\n        loader: React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Loading...\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(FunkosCardContainer, {\n        funkos: this.state.selection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      // funkos: Array.from({ length: 20 })\n      funkos: [],\n      selection: [],\n      hasMore: true\n    };\n    this.index = 20;\n  }\n\n  componentDidMount() {\n    const API = \"http://localhost:3000\";\n\n    const fetchFunkos = () => {\n      fetch(\"\".concat(API, \"/funkos\")).then(resp => resp.json());\n    };\n\n    const temp = fetchFunkos();\n    console.log(temp); // .then(data =>\n    //   this.setState({ funkos: data, selection: data.slice(0, this.index) })\n    // );\n  } ////// ------------- funkos request ------------------- /////////////\n  // fetchFunkos = () => {\n  //   fetch(`${API}/funkos`)\n  //     .then(resp => resp.json())\n  //     .then(data =>\n  //       this.setState({ funkos: data, selection: data.slice(0, this.index) })\n  //     );\n  // };\n  ////// ------------- infinite scroll ------------------- /////////////\n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: this.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","InfiniteScroll","NavBar","FunkosCardContainer","api","App","constructor","fetchMoreFunkos","state","selection","length","funkos","setState","hasMore","setTimeout","concat","slice","index","home","componentDidMount","API","fetchFunkos","fetch","then","resp","json","temp","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAqCdC,eArCc,GAqCI,MAAM;AACtB,UAAI,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,MAArB,IAA+B,KAAKF,KAAL,CAAWG,MAAX,CAAkBD,MAArD,EAA6D;AAC3D,aAAKE,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;AACA;AACD;;AAEDC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKF,QAAL,CAAc;AACZH,UAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAAX,CAAqBM,MAArB,CACT,KAAKP,KAAL,CAAWG,MAAX,CAAkBK,KAAlB,CAAwB,KAAKC,KAA7B,EAAoC,KAAKA,KAAL,GAAa,EAAjD,CADS;AADC,SAAd;AAKA,aAAKA,KAAL,GAAa,KAAKA,KAAL,GAAa,EAA1B;AACD,OAPS,EAOP,IAPO,CAAV;AAQD,KAnDa;;AAAA,SAuDdC,IAvDc,GAuDP,MAAM;AACX,aACE,oBAAC,cAAD;AACE,QAAA,UAAU,EAAE,KAAKV,KAAL,CAAWC,SAAX,CAAqBC,MADnC;AAEE,QAAA,IAAI,EAAE,KAAKH,eAFb;AAGE,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWK,OAHtB;AAIE,QAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,mBAAD;AAAqB,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD,KAlEa;;AAEZ,SAAKD,KAAL,GAAa;AACX;AACAG,MAAAA,MAAM,EAAE,EAFG;AAGXF,MAAAA,SAAS,EAAE,EAHA;AAIXI,MAAAA,OAAO,EAAE;AAJE,KAAb;AAOA,SAAKI,KAAL,GAAa,EAAb;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,uBAAZ;;AAEA,UAAMC,WAAW,GAAG,MAAM;AACxBC,MAAAA,KAAK,WAAIF,GAAJ,aAAL,CAAuBG,IAAvB,CAA4BC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAApC;AACD,KAFD;;AAGA,UAAMC,IAAI,GAAGL,WAAW,EAAxB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAPkB,CAQlB;AACA;AACA;AACD,GAxByB,CA0B1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAiCAG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAE,KAAKX,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5EyB;;AA+E5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FunkosCardContainer from \"./containers/FunkosCardContainer\";\nimport api from \"./util/api\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // funkos: Array.from({ length: 20 })\n      funkos: [],\n      selection: [],\n      hasMore: true\n    };\n\n    this.index = 20;\n  }\n\n  componentDidMount() {\n    const API = \"http://localhost:3000\";\n\n    const fetchFunkos = () => {\n      fetch(`${API}/funkos`).then(resp => resp.json());\n    };\n    const temp = fetchFunkos();\n    console.log(temp);\n    // .then(data =>\n    //   this.setState({ funkos: data, selection: data.slice(0, this.index) })\n    // );\n  }\n\n  ////// ------------- funkos request ------------------- /////////////\n\n  // fetchFunkos = () => {\n  //   fetch(`${API}/funkos`)\n  //     .then(resp => resp.json())\n  //     .then(data =>\n  //       this.setState({ funkos: data, selection: data.slice(0, this.index) })\n  //     );\n  // };\n\n  ////// ------------- infinite scroll ------------------- /////////////\n\n  fetchMoreFunkos = () => {\n    if (this.state.selection.length >= this.state.funkos.length) {\n      this.setState({ hasMore: false });\n      return;\n    }\n\n    setTimeout(() => {\n      this.setState({\n        selection: this.state.selection.concat(\n          this.state.funkos.slice(this.index, this.index + 20)\n        )\n      });\n      this.index = this.index + 20;\n    }, 1500);\n  };\n\n  ////// ------------- routes ------------------- /////////////\n\n  home = () => {\n    return (\n      <InfiniteScroll\n        dataLength={this.state.selection.length}\n        next={this.fetchMoreFunkos}\n        hasMore={this.state.hasMore}\n        loader={<h4>Loading...</h4>}\n      >\n        <FunkosCardContainer funkos={this.state.selection} />\n      </InfiniteScroll>\n    );\n  };\n\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Route path=\"/\" exact component={this.home} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}