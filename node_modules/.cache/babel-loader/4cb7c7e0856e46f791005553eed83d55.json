{"ast":null,"code":"var _jsxFileName = \"/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch, withRouter } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport FunkosCardContainer from \"./containers/FunkosCardContainer\";\nimport FunkoPage from \"./components/FunkoPage\";\nimport UserPage from \"./components/UserPage\";\nimport api from \"./util/api\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleCurrentUser = () => {\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        api.getCurrentUser(token).then(user => {\n          this.setState({\n            loggedIn: true,\n            username: user.username,\n            currentUser: user,\n            password: \"\",\n            collection: user.collections,\n            wishlist: user.wishlists\n          });\n        });\n      }\n    };\n\n    this.onLoginClicked = e => {\n      e.preventDefault();\n      api.login(this.state.username, this.state.password).then(data => {\n        if (data.error) {\n          alert(\"something is wrong with your credentials\");\n          this.setState({\n            username: \"\",\n            password: \"\"\n          });\n        } else {\n          localStorage.setItem(\"token\", data.jwt);\n          const token = localStorage.getItem(\"token\");\n\n          if (token) {\n            api.getCurrentUser(token).then(user => {\n              this.setState({\n                loggedIn: true,\n                username: user.username,\n                currentUser: user,\n                password: \"\",\n                collection: user.collections,\n                wishlist: user.wishlists\n              });\n            }).then(() => this.props.history.push(\"/mypage\"));\n          }\n        }\n      });\n    };\n\n    this.handleLogOut = () => {\n      localStorage.clear(\"token\");\n      this.setState({\n        loggedIn: false,\n        username: \"\",\n        password: \"\",\n        currentUser: {},\n        collection: [],\n        wishlist: []\n      });\n    };\n\n    this.selectFunko = id => {\n      api.showFunko(id).then(data => {\n        this.setState({\n          selectedFunko: data\n        }, () => this.props.history.push(\"/funkopage/\".concat(id)));\n      });\n    };\n\n    this.handleAddFunkoToCollection = () => {\n      api.addFunkoToCollection(this.state.currentUser.id, this.state.selectedFunko.id).then(data => {\n        this.setState({\n          collection: [data, ...this.state.collection]\n        });\n        alert(\"Amazing, you have add \".concat(this.state.selectedFunko.name, \" to your collection!\"));\n        this.props.history.push(\"/mypage\");\n      });\n    };\n\n    this.handleAddFunkoToWishlist = () => {\n      api.addFunkoToWishlist(this.state.currentUser.id, this.state.selectedFunko.id).then(data => {\n        this.setState({\n          wishlist: [data, ...this.state.wishlist]\n        });\n        alert(\"Amazing, you have add \".concat(this.state.selectedFunko.name, \" to your wishlist!\"));\n        this.props.history.push(\"/mypage\");\n      });\n    };\n\n    this.fetchMoreFunkos = () => {\n      if (this.state.selection.length >= this.state.funkos.length) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      }\n\n      setTimeout(() => {\n        this.setState({\n          selection: this.state.selection.concat(this.state.funkos.slice(this.index, this.index + 20))\n        });\n        this.index = this.index + 20;\n      }, 1500);\n    };\n\n    this.home = props => {\n      return React.createElement(InfiniteScroll, Object.assign({\n        dataLength: this.state.selection.length,\n        next: this.fetchMoreFunkos,\n        hasMore: this.state.hasMore,\n        loader: React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Loading...\"),\n        selectFunko: this.selectFunko\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(FunkosCardContainer, {\n        funkos: this.state.selection,\n        selectFunko: this.selectFunko,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }));\n    };\n\n    this.signUpForm = props => {\n      return React.createElement(SignUpForm, Object.assign({\n        handleCurrentUser: this.handleCurrentUser\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }));\n    };\n\n    this.funkoPage = props => {\n      return React.createElement(FunkoPage, Object.assign({\n        funko: this.state.selectedFunko,\n        handleAddFunkoToCollection: this.handleAddFunkoToCollection,\n        handleAddFunkoToWishlist: this.handleAddFunkoToWishlist\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }));\n    };\n\n    this.userPage = props => {\n      return React.createElement(UserPage, {\n        user: this.state.currentUser,\n        collection: this.state.collection,\n        wishlist: this.state.wishlist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      });\n    };\n\n    this.state = {\n      funkos: [],\n      selection: [],\n      hasMore: true,\n      currentUser: {},\n      username: \"\",\n      password: \"\",\n      loggedIn: false,\n      collection: [],\n      wishlist: [],\n      selectedFunko: {}\n    };\n    this.index = 20;\n  }\n\n  componentDidMount() {\n    api.fetchFunkos().then(data => this.setState({\n      funkos: data,\n      selection: data.slice(0, this.index)\n    }));\n    this.handleCurrentUser();\n  } ////// ------------- handle change ------------------- /////////////\n\n\n  ////// ------------- render method ------------------- /////////////\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      loggedIn: this.state.loggedIn,\n      onLoginClicked: this.onLoginClicked,\n      handleLogOut: this.handleLogOut,\n      currentUser: this.state.currentUser,\n      password: this.state.password,\n      username: this.state.username,\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: props => this.home(props),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup-form\",\n      component: props => this.signUpForm(props),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/funkopage/:id\",\n      component: props => this.funkoPage(props),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/mypage\",\n      component: props => this.userPage(props),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst AppRouter = withRouter(App);\nexport default AppRouter;","map":{"version":3,"sources":["/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","Switch","withRouter","InfiniteScroll","NavBar","SignUpForm","FunkosCardContainer","FunkoPage","UserPage","api","App","constructor","handleChange","e","setState","target","name","value","handleCurrentUser","token","localStorage","getItem","getCurrentUser","then","user","loggedIn","username","currentUser","password","collection","collections","wishlist","wishlists","onLoginClicked","preventDefault","login","state","data","error","alert","setItem","jwt","props","history","push","handleLogOut","clear","selectFunko","id","showFunko","selectedFunko","handleAddFunkoToCollection","addFunkoToCollection","handleAddFunkoToWishlist","addFunkoToWishlist","fetchMoreFunkos","selection","length","funkos","hasMore","setTimeout","concat","slice","index","home","signUpForm","funkoPage","userPage","componentDidMount","fetchFunkos","render","AppRouter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  withRouter\n} from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport FunkosCardContainer from \"./containers/FunkosCardContainer\";\nimport FunkoPage from \"./components/FunkoPage\";\nimport UserPage from \"./components/UserPage\";\nimport api from \"./util/api\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      funkos: [],\n      selection: [],\n      hasMore: true,\n      currentUser: {},\n      username: \"\",\n      password: \"\",\n      loggedIn: false,\n      collection: [],\n      wishlist: [],\n      selectedFunko: {}\n    };\n\n    this.index = 20;\n  }\n\n  componentDidMount() {\n    api\n      .fetchFunkos()\n      .then(data =>\n        this.setState({ funkos: data, selection: data.slice(0, this.index) })\n      );\n    this.handleCurrentUser();\n  }\n\n  ////// ------------- handle change ------------------- /////////////\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  ////// ------------- get current user ------------------- /////////////\n\n  handleCurrentUser = () => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      api.getCurrentUser(token).then(user => {\n        this.setState({\n          loggedIn: true,\n          username: user.username,\n          currentUser: user,\n          password: \"\",\n          collection: user.collections,\n          wishlist: user.wishlists\n        });\n      });\n    }\n  };\n\n  onLoginClicked = e => {\n    e.preventDefault();\n    api.login(this.state.username, this.state.password).then(data => {\n      if (data.error) {\n        alert(\"something is wrong with your credentials\");\n        this.setState({ username: \"\", password: \"\" });\n      } else {\n        localStorage.setItem(\"token\", data.jwt);\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n          api\n            .getCurrentUser(token)\n            .then(user => {\n              this.setState({\n                loggedIn: true,\n                username: user.username,\n                currentUser: user,\n                password: \"\",\n                collection: user.collections,\n                wishlist: user.wishlists\n              });\n            })\n            .then(() => this.props.history.push(\"/mypage\"));\n        }\n      }\n    });\n  };\n\n  handleLogOut = () => {\n    localStorage.clear(\"token\");\n    this.setState({\n      loggedIn: false,\n      username: \"\",\n      password: \"\",\n      currentUser: {},\n      collection: [],\n      wishlist: []\n    });\n  };\n\n  ////// ------------- select funko ------------------- /////////////\n\n  selectFunko = id => {\n    api.showFunko(id).then(data => {\n      this.setState({ selectedFunko: data }, () =>\n        this.props.history.push(`/funkopage/${id}`)\n      );\n    });\n  };\n\n  ////// ------------- add funko ------------------- /////////////\n\n  handleAddFunkoToCollection = () => {\n    api\n      .addFunkoToCollection(\n        this.state.currentUser.id,\n        this.state.selectedFunko.id\n      )\n      .then(data => {\n        this.setState({\n          collection: [data, ...this.state.collection]\n        });\n        alert(\n          `Amazing, you have add ${\n            this.state.selectedFunko.name\n          } to your collection!`\n        );\n        this.props.history.push(\"/mypage\");\n      });\n  };\n\n  handleAddFunkoToWishlist = () => {\n    api\n      .addFunkoToWishlist(\n        this.state.currentUser.id,\n        this.state.selectedFunko.id\n      )\n      .then(data => {\n        this.setState({\n          wishlist: [data, ...this.state.wishlist]\n        });\n        alert(\n          `Amazing, you have add ${\n            this.state.selectedFunko.name\n          } to your wishlist!`\n        );\n        this.props.history.push(\"/mypage\");\n      });\n  };\n\n  ////// ------------- infinite scroll ------------------- /////////////\n\n  fetchMoreFunkos = () => {\n    if (this.state.selection.length >= this.state.funkos.length) {\n      this.setState({ hasMore: false });\n      return;\n    }\n\n    setTimeout(() => {\n      this.setState({\n        selection: this.state.selection.concat(\n          this.state.funkos.slice(this.index, this.index + 20)\n        )\n      });\n      this.index = this.index + 20;\n    }, 1500);\n  };\n\n  ////// ------------- routes ------------------- /////////////\n\n  home = props => {\n    return (\n      <InfiniteScroll\n        dataLength={this.state.selection.length}\n        next={this.fetchMoreFunkos}\n        hasMore={this.state.hasMore}\n        loader={<h4>Loading...</h4>}\n        selectFunko={this.selectFunko}\n        {...props}\n      >\n        <FunkosCardContainer\n          funkos={this.state.selection}\n          selectFunko={this.selectFunko}\n        />\n      </InfiniteScroll>\n    );\n  };\n\n  signUpForm = props => {\n    return <SignUpForm handleCurrentUser={this.handleCurrentUser} {...props} />;\n  };\n\n  funkoPage = props => {\n    return (\n      <FunkoPage\n        funko={this.state.selectedFunko}\n        handleAddFunkoToCollection={this.handleAddFunkoToCollection}\n        handleAddFunkoToWishlist={this.handleAddFunkoToWishlist}\n        {...props}\n      />\n    );\n  };\n\n  userPage = props => {\n    return (\n      <UserPage\n        user={this.state.currentUser}\n        collection={this.state.collection}\n        wishlist={this.state.wishlist}\n      />\n    );\n  };\n\n  ////// ------------- render method ------------------- /////////////\n\n  render() {\n    return (\n      <div>\n        <NavBar\n          loggedIn={this.state.loggedIn}\n          onLoginClicked={this.onLoginClicked}\n          handleLogOut={this.handleLogOut}\n          currentUser={this.state.currentUser}\n          password={this.state.password}\n          username={this.state.username}\n          handleChange={this.handleChange}\n        />\n        <Switch>\n          <Route path=\"/\" exact component={props => this.home(props)} />\n          <Route\n            path=\"/signup-form\"\n            component={props => this.signUpForm(props)}\n          />\n          <Route\n            path=\"/funkopage/:id\"\n            component={props => this.funkoPage(props)}\n          />\n          <Route path=\"/mypage\" component={props => this.userPage(props)} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst AppRouter = withRouter(App);\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}