{"ast":null,"code":"import _objectSpread from \"/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst API = \"http://localhost:3000\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Accepts: \"application/json\"\n};\n\nconst fetchFunkos = () => {\n  return fetch(\"\".concat(API, \"/funkos\")).then(resp => resp.json());\n};\n\nconst login = (username, password) => {\n  return fetch(\"\".concat(API, \"/auth/create\"), {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({\n      username,\n      password\n    })\n  }).then(res => res.json());\n};\n\nconst getCurrentUser = token => {\n  return fetch(\"\".concat(API, \"/auth/show\"), {\n    headers: _objectSpread({}, headers, {\n      Authorization: token\n    })\n  }).then(res => res.json());\n};\n\nconst createUser = newUser => {\n  return fetch(\"\".concat(API, \"/api/v1/users\"), {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(newUser)\n  }).then(res => res.json());\n};\n\nconst showFunko = id => {\n  return fetch(\"\".concat(API, \"/funkos/\").concat(id)).then(resp => resp.json());\n};\n\nconst showFunkoWishlist = id => {\n  return fetch(\"\".concat(API, \"/wishlists/\").concat(id)).then(resp => resp.json());\n};\n\nconst showFunkoCollection = id => {\n  return fetch(\"\".concat(API, \"/collections/\").concat(id)).then(resp => resp.json());\n};\n\nconst addFunkoToCollection = (userId, funkoId) => {\n  return fetch(\"\".concat(API, \"/collections\"), {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({\n      collection: {\n        user_id: userId,\n        funko_id: funkoId\n      }\n    })\n  }).then(res => res.json());\n};\n\nconst addFunkoToWishlist = (userId, funkoId) => {\n  return fetch(\"\".concat(API, \"/wishlists\"), {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({\n      wishlist: {\n        user_id: userId,\n        funko_id: funkoId\n      }\n    })\n  }).then(res => res.json());\n};\n\nconst removeFromWishlist = id => {\n  return fetch(\"\".concat(API, \"/wishlists/\").concat(id), {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\n\nconst removeFromCollection = id => {\n  return fetch(\"\".concat(API, \"/collections/\").concat(id), {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\n\nconst searchFunkos = searchTerm => {\n  return fetch(\"\".concat(API, \"/searchquery?searchterm=\").concat(searchTerm)).then(resp => resp.json());\n};\n\nconst toggleFunkoOnTrade = (id, availability) => {\n  return fetch(\"\".concat(API, \"/collections/\").concat(id), {\n    method: \"PATCH\",\n    headers: headers,\n    body: JSON.stringify({\n      collection: {\n        available_to_trade: availability\n      }\n    })\n  }).then(resp => resp.json());\n};\n\nconst funkosAvailableToTrade = id => {\n  return fetch(\"\".concat(API, \"/funkos-to-trade?user_id=\").concat(id)).then(resp => resp.json());\n};\n\nconst myFunkosToTrade = id => {\n  return fetch(\"\".concat(API, \"/my-funkos-to-trade?user_id=\").concat(id)).then(resp => resp.json());\n};\n\nconst myOffers = id => {\n  return fetch(\"\".concat(API, \"/my-offers?user_id=\").concat(id)).then(resp => resp.json());\n};\n\nconst makeAnOffer = (incomingFunko, outgoingFunko) => {\n  return fetch(\"\".concat(API, \"/offers\"), {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({\n      offer: {\n        incoming_funko_id: incomingFunko,\n        outcoming_funko_id: outgoingFunko\n      }\n    })\n  }).then(res => res.json());\n};\n\nconst showOffer = id => {\n  return fetch(\"\".concat(API, \"/offers/\").concat(id)).then(resp => resp.json());\n};\n\nconst toggleOfferStatus = (id, newStatus) => {\n  return fetch(\"\".concat(API, \"/offers/\").concat(id), {\n    method: \"PATCH\",\n    headers: headers,\n    body: JSON.stringify({\n      offer: {\n        status: availability\n      }\n    })\n  }).then(resp => resp.json());\n};\n\nexport default {\n  fetchFunkos,\n  login,\n  getCurrentUser,\n  createUser,\n  showFunko,\n  addFunkoToCollection,\n  addFunkoToWishlist,\n  showFunkoWishlist,\n  removeFromWishlist,\n  removeFromCollection,\n  showFunkoCollection,\n  searchFunkos,\n  toggleFunkoOnTrade,\n  funkosAvailableToTrade,\n  myFunkosToTrade,\n  myOffers,\n  makeAnOffer,\n  showOffer\n};","map":{"version":3,"sources":["/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/util/api.js"],"names":["API","headers","Accepts","fetchFunkos","fetch","then","resp","json","login","username","password","method","body","JSON","stringify","res","getCurrentUser","token","Authorization","createUser","newUser","showFunko","id","showFunkoWishlist","showFunkoCollection","addFunkoToCollection","userId","funkoId","collection","user_id","funko_id","addFunkoToWishlist","wishlist","removeFromWishlist","removeFromCollection","searchFunkos","searchTerm","toggleFunkoOnTrade","availability","available_to_trade","funkosAvailableToTrade","myFunkosToTrade","myOffers","makeAnOffer","incomingFunko","outgoingFunko","offer","incoming_funko_id","outcoming_funko_id","showOffer","toggleOfferStatus","newStatus","status"],"mappings":"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","sourcesContent":["const API = \"http://localhost:3000\";\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Accepts: \"application/json\"\n};\n\nconst fetchFunkos = () => {\n  return fetch(`${API}/funkos`).then(resp => resp.json());\n};\n\nconst login = (username, password) => {\n  return fetch(`${API}/auth/create`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({ username, password })\n  }).then(res => res.json());\n};\n\nconst getCurrentUser = token => {\n  return fetch(`${API}/auth/show`, {\n    headers: { ...headers, Authorization: token }\n  }).then(res => res.json());\n};\n\nconst createUser = newUser => {\n  return fetch(`${API}/api/v1/users`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(newUser)\n  }).then(res => res.json());\n};\n\nconst showFunko = id => {\n  return fetch(`${API}/funkos/${id}`).then(resp => resp.json());\n};\n\nconst showFunkoWishlist = id => {\n  return fetch(`${API}/wishlists/${id}`).then(resp => resp.json());\n};\n\nconst showFunkoCollection = id => {\n  return fetch(`${API}/collections/${id}`).then(resp => resp.json());\n};\n\nconst addFunkoToCollection = (userId, funkoId) => {\n  return fetch(`${API}/collections`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({ collection: { user_id: userId, funko_id: funkoId } })\n  }).then(res => res.json());\n};\n\nconst addFunkoToWishlist = (userId, funkoId) => {\n  return fetch(`${API}/wishlists`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({ wishlist: { user_id: userId, funko_id: funkoId } })\n  }).then(res => res.json());\n};\n\nconst removeFromWishlist = id => {\n  return fetch(`${API}/wishlists/${id}`, {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\n\nconst removeFromCollection = id => {\n  return fetch(`${API}/collections/${id}`, {\n    method: \"DELETE\"\n  }).then(res => res.json());\n};\n\nconst searchFunkos = searchTerm => {\n  return fetch(`${API}/searchquery?searchterm=${searchTerm}`).then(resp =>\n    resp.json()\n  );\n};\n\nconst toggleFunkoOnTrade = (id, availability) => {\n  return fetch(`${API}/collections/${id}`, {\n    method: \"PATCH\",\n    headers: headers,\n    body: JSON.stringify({ collection: { available_to_trade: availability } })\n  }).then(resp => resp.json());\n};\n\nconst funkosAvailableToTrade = id => {\n  return fetch(`${API}/funkos-to-trade?user_id=${id}`).then(resp =>\n    resp.json()\n  );\n};\n\nconst myFunkosToTrade = id => {\n  return fetch(`${API}/my-funkos-to-trade?user_id=${id}`).then(resp =>\n    resp.json()\n  );\n};\n\nconst myOffers = id => {\n  return fetch(`${API}/my-offers?user_id=${id}`).then(resp => resp.json());\n};\n\nconst makeAnOffer = (incomingFunko, outgoingFunko) => {\n  return fetch(`${API}/offers`, {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify({\n      offer: {\n        incoming_funko_id: incomingFunko,\n        outcoming_funko_id: outgoingFunko\n      }\n    })\n  }).then(res => res.json());\n};\n\nconst showOffer = id => {\n  return fetch(`${API}/offers/${id}`).then(resp => resp.json());\n};\n\nconst toggleOfferStatus = (id, newStatus) => {\n  return fetch(`${API}/offers/${id}`, {\n    method: \"PATCH\",\n    headers: headers,\n    body: JSON.stringify({ offer: { status: availability } })\n  }).then(resp => resp.json());\n};\n\nexport default {\n  fetchFunkos,\n  login,\n  getCurrentUser,\n  createUser,\n  showFunko,\n  addFunkoToCollection,\n  addFunkoToWishlist,\n  showFunkoWishlist,\n  removeFromWishlist,\n  removeFromCollection,\n  showFunkoCollection,\n  searchFunkos,\n  toggleFunkoOnTrade,\n  funkosAvailableToTrade,\n  myFunkosToTrade,\n  myOffers,\n  makeAnOffer,\n  showOffer\n};\n"]},"metadata":{},"sourceType":"module"}