{"ast":null,"code":"var _jsxFileName = \"/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FunkosCardContainer from \"./containers/FunkosCardContainer\";\nimport api from \"./util/api\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onLoginClicked = e => {\n      e.preventDefault();\n      api.login(this.state.currentUser).then(data => {\n        if (data.error) {\n          alert(\"something is wrong with your credentials\");\n          this.setState({\n            currentUser: {}\n          });\n        } else {\n          localStorage.setItem(\"token\", data.jwt);\n          this.setState({\n            logged_in: true,\n            username: data.username\n          });\n        }\n      });\n    };\n\n    this.handleLogOut = () => {\n      localStorage.clear(\"token\");\n      this.setState({\n        logged_in: false,\n        username: \"\",\n        password: \"\",\n        posts: []\n      });\n    };\n\n    this.fetchMoreFunkos = () => {\n      if (this.state.selection.length >= this.state.funkos.length) {\n        this.setState({\n          hasMore: false\n        });\n        return;\n      }\n\n      setTimeout(() => {\n        this.setState({\n          selection: this.state.selection.concat(this.state.funkos.slice(this.index, this.index + 20))\n        });\n        this.index = this.index + 20;\n      }, 1500);\n    };\n\n    this.home = () => {\n      return React.createElement(InfiniteScroll, {\n        dataLength: this.state.selection.length,\n        next: this.fetchMoreFunkos,\n        hasMore: this.state.hasMore,\n        loader: React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Loading...\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(FunkosCardContainer, {\n        funkos: this.state.selection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      // funkos: Array.from({ length: 20 })\n      funkos: [],\n      selection: [],\n      hasMore: true,\n      currentUser: {},\n      logged_in: false\n    };\n    this.index = 20;\n  }\n\n  componentDidMount() {\n    api.fetchFunkos().then(data => this.setState({\n      funkos: data,\n      selection: data.slice(0, this.index)\n    }));\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      api.getCurrentUser(token).then(user => {\n        this.setState({\n          logged_in: true,\n          username: user.username\n        });\n      });\n    }\n  } ////// ------------- get current user ------------------- /////////////\n\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: this.home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcomiranda/Dev/GitHub/funpop_world_frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","InfiniteScroll","NavBar","FunkosCardContainer","api","App","constructor","handleChange","e","setState","target","name","value","onLoginClicked","preventDefault","login","state","currentUser","then","data","error","alert","localStorage","setItem","jwt","logged_in","username","handleLogOut","clear","password","posts","fetchMoreFunkos","selection","length","funkos","hasMore","setTimeout","concat","slice","index","home","componentDidMount","fetchFunkos","token","getItem","getCurrentUser","user","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FunkosCardContainer from \"./containers/FunkosCardContainer\";\nimport api from \"./util/api\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // funkos: Array.from({ length: 20 })\n      funkos: [],\n      selection: [],\n      hasMore: true,\n      currentUser: {},\n      logged_in: false\n    };\n\n    this.index = 20;\n  }\n\n  componentDidMount() {\n    api\n      .fetchFunkos()\n      .then(data =>\n        this.setState({ funkos: data, selection: data.slice(0, this.index) })\n      );\n\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      api.getCurrentUser(token).then(user => {\n        this.setState({ logged_in: true, username: user.username });\n      });\n    }\n  }\n\n  ////// ------------- get current user ------------------- /////////////\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onLoginClicked = e => {\n    e.preventDefault();\n    api.login(this.state.currentUser).then(data => {\n      if (data.error) {\n        alert(\"something is wrong with your credentials\");\n        this.setState({ currentUser: {} });\n      } else {\n        localStorage.setItem(\"token\", data.jwt);\n        this.setState({ logged_in: true, username: data.username });\n      }\n    });\n  };\n\n  handleLogOut = () => {\n    localStorage.clear(\"token\");\n    this.setState({\n      logged_in: false,\n      username: \"\",\n      password: \"\",\n      posts: []\n    });\n  };\n\n  ////// ------------- infinite scroll ------------------- /////////////\n\n  fetchMoreFunkos = () => {\n    if (this.state.selection.length >= this.state.funkos.length) {\n      this.setState({ hasMore: false });\n      return;\n    }\n\n    setTimeout(() => {\n      this.setState({\n        selection: this.state.selection.concat(\n          this.state.funkos.slice(this.index, this.index + 20)\n        )\n      });\n      this.index = this.index + 20;\n    }, 1500);\n  };\n\n  ////// ------------- routes ------------------- /////////////\n\n  home = () => {\n    return (\n      <InfiniteScroll\n        dataLength={this.state.selection.length}\n        next={this.fetchMoreFunkos}\n        hasMore={this.state.hasMore}\n        loader={<h4>Loading...</h4>}\n      >\n        <FunkosCardContainer funkos={this.state.selection} />\n      </InfiniteScroll>\n    );\n  };\n\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Route path=\"/\" exact component={this.home} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}